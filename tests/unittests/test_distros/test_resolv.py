from mocker import MockerTestCase

from cloudinit.distros import helpers


BASE_RESOLVE = '''
; generated by /sbin/dhclient-script
search blah.yahoo.com yahoo.com
nameserver 10.15.44.14
nameserver 10.15.30.92
'''
BASE_RESOLVE = BASE_RESOLVE.strip()


class TestResolvHelper(MockerTestCase):
    def test_parse_same(self):
        rp = helpers.ResolvConf(BASE_RESOLVE)
        rp_r = str(rp).strip()
        self.assertEquals(BASE_RESOLVE, rp_r)

    def test_local_domain(self):
        rp = helpers.ResolvConf(BASE_RESOLVE)
        self.assertEquals(None, rp.local_domain)

        rp.local_domain = "bob"
        self.assertEquals('bob', rp.local_domain)
        self.assertIn('domain bob', str(rp))

    def test_nameservers(self):
        rp = helpers.ResolvConf(BASE_RESOLVE)
        self.assertIn('10.15.44.14', rp.nameservers)
        self.assertIn('10.15.30.92', rp.nameservers)
        rp.add_nameserver('10.2')
        self.assertIn('10.2', rp.nameservers)
        self.assertIn('nameserver 10.2', str(rp))
        self.assertNotIn('10.3', rp.nameservers)
        self.assertEquals(len(rp.nameservers), 3)
        rp.add_nameserver('10.2')
        with self.assertRaises(ValueError):
            rp.add_nameserver('10.3')
        self.assertNotIn('10.3', rp.nameservers)

    def test_search_domains(self):
        rp = helpers.ResolvConf(BASE_RESOLVE)
        self.assertIn('yahoo.com', rp.search_domains)
        self.assertIn('blah.yahoo.com', rp.search_domains)
        rp.add_search_domain('bbb.y.com')
        self.assertIn('bbb.y.com', rp.search_domains)
        self.assertRegexpMatches(str(rp), r'search(.*)bbb.y.com(.*)')
        self.assertIn('bbb.y.com', rp.search_domains)
        rp.add_search_domain('bbb.y.com')
        self.assertEquals(len(rp.search_domains), 3)
        rp.add_search_domain('bbb2.y.com')
        self.assertEquals(len(rp.search_domains), 4)
        rp.add_search_domain('bbb3.y.com')
        self.assertEquals(len(rp.search_domains), 5)
        rp.add_search_domain('bbb4.y.com')
        self.assertEquals(len(rp.search_domains), 6)
        with self.assertRaises(ValueError):
            rp.add_search_domain('bbb5.y.com')
        self.assertEquals(len(rp.search_domains), 6)
